<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>co.luminositylabs.deltaspike.modules</groupId>
        <artifactId>jsf-module-project</artifactId>
        <version>2.0.0-ll-SNAPSHOT</version>
    </parent>

    <artifactId>deltaspike-jsf-module-impl</artifactId>

    <name>Apache DeltaSpike JSF-Module Impl</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <outputDirectory>${project.build.directory}/classes/META-INF/resources/deltaspike-uncompressed</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/classes/META-INF/resources/deltaspike</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.primefaces.extensions</groupId>
                <artifactId>resources-optimizer-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>optimize</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <inputDir>${project.build.directory}/classes/META-INF/resources/deltaspike/</inputDir>
                    <resourceSets>
                        <resourcesSet>
                            <includes>
                                <include>**/*.js</include>
                                <include>**/*.css</include>
                            </includes>
                        </resourcesSet>
                    </resourceSets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>co.luminositylabs.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>co.luminositylabs.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>co.luminositylabs.deltaspike.modules</groupId>
            <artifactId>deltaspike-security-module-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>co.luminositylabs.deltaspike.modules</groupId>
            <artifactId>deltaspike-security-module-impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>co.luminositylabs.deltaspike.modules</groupId>
            <artifactId>deltaspike-jsf-module-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>co.luminositylabs.deltaspike.modules</groupId>
            <artifactId>deltaspike-proxy-module-api</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>co.luminositylabs.deltaspike.modules</groupId>
            <artifactId>deltaspike-proxy-module-impl-asm</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
        </dependency>

        <!-- we use Arquillian Warp to test our JSF apps -->
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-api</artifactId>
            <version>1.1.0.CR3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-warp-api</artifactId>
            <version>1.0.0.Alpha1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <version>2.0.3.Final</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.enterprise</groupId>
                    <artifactId>cdi-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>tomee10-build-managed</id>
            <build>
                <plugins>
                    <!--
                     * JSF-2.3 broke backward compatibility by trying to handle CDI beans themselves.
                     * Some JSF annotations now have a 'managed' attribute, which must be set to true
                     * to properly serve CDI Injection.
                     * This cannot be done easily in unit tests which are backward compatible by design.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.plugin.version}</version>
                        <configuration>
                            <excludes>
                                <exclude>org/apache/deltaspike/test/jsf/impl/injection/**/*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <!-- for debugging -->
                <dependency>
                    <groupId>org.apache.myfaces.core</groupId>
                    <artifactId>myfaces-impl</artifactId>
                    <version>${myfaces.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

        </profile>
    </profiles>

</project>
